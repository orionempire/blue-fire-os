/**************************************************************************
 *	bluefire-os
 *	Version: 00.00.08
 *	Author: David Davidson
 *	Name: keyboard.c
 *	Created: Feb 22, 2012
 *	Purpose:
 *  Usage:
***************************************************************************/
#include <common_include.h>

void keyboard_wait_controller() {
	s32int retries = 500000;


	while (((inport08(KEYBOARD_STATUS) & KEYBOARD_BUSY) == KEYBOARD_BUSY) && retries!=0) {
			retries--;
	}
}

void update_leds() {
	s32int leds;
	console_t *curr_cons = get_console_addr( get_curr_console() );

	leds = (curr_cons->scroll_lock) | (curr_cons->num_lock << 1) | (curr_cons->caps_lock << 2);

	u32int flags;
	disable_and_save_interrupts(flags);

	keyboard_wait_controller();
	outport08(KEYBOARD_PORT, KEYBOARD_LED_CODE);
	keyboard_wait_controller();
	outport08(KEYBOARD_PORT, leds);


	restore_interrupts(flags);

}

void keyboard_handler(irq_context_t *context) {
	static s32int code, val;
	u32int flags;
	disable_and_save_interrupts(flags);

	// If the scan is not acknowledged no further interrupts will be generated
	code = inport08(0x60);	// Get scan code
	val =  inport08(0x61);	// Get keyboard acknowledge
	outport08(0x61, val | 0x80); // Disable bit 7
	outport08(0x61, val);	// Send that back

	kprintf("\nKeyboard interrupt %x caught, scan code %x: \n", context->IRQ,code);
	enable_IRQ(context->IRQ);

}
void initialize_keyboard() {

	update_leds();

	register_interrupt_handler(KEYBOARD_IRQ, &keyboard_handler);
}
